type client = {
  name: string;
  version: string;
  clientUrl: string
}

type stacktrace_entry = {
  lineNumber: int;
  className: string;
  columnNumber: int;
  fileName: string;
  methodName: string
}

type error = {
  ?innerError: error option;
  ?data: (string*string) list <json repr="object"> option;
  className: string;
  message: string;
  stackTrace: stacktrace_entry list
}

type environment = {
  ?processorCount: int option;
  ?osVersion: string option;
  ?windowBoundsWidth: int option;
  ?windowBoundsHeight: int option;
  ?browser_Width <json name="browser-Width">: int option;
  ?browser_Height <json name="browser-Height">: int option;
  ?screen_Width <json name="screen-Width">: int option;
  ?screen_Height <json name="screen-Height">: int option;
  ?resolutionScale: float option;
  ?color_Depth <json name="color-Depth">: int option;
  ?currentOrientation: string option;
  ?cpu: string option;
  ?packageVersion: string option;
  ?architecture: string option;
  ?deviceManufacturer: string option;
  ?model: string option;
  ?totalPhysicalMemory: float option;
  ?availablePhysicalMemory: float option;
  ?totalVirtualMemory: float option;
  ?availableVirtualMemory: float option;
  ?diskSpaceFree: float list option;
  ?deviceName: string option;
  ?locale: string option;
  ?utcOffset: string option;
  ?browser: string option;
  ?browserName: string option;
  ?browser_Version <json name="browser-Version">: string option;
  platform: string
}

type request = {
  ?hostName: string option;
  ?url: string option;
  ?httpMethod: string option;
  ?iPAddress: string option;
  ?queryString: (string*string) list option;
  ?form: (string*string) list option;
  ?headers: (string*string) list <json repr="object"> option;
  ?rawData: string option;
}

type response = {
  statusCode: int;
}

type user = {
  identifier: string;
  isAnonymous: bool;
  email: string;
  fullName: string;
  firstName: string;
  uuid: string;
}

type details = {
  ?machineName: string option;
  ?version: string option;
  client: client;
  error: error;  
  environment: environment;
  tags: string list;
  ?userCustomData: (string*string) list <json repr="object"> option; 
  ?request: request option;
  ?response: response option;   
  ?user: user option
}

type entry = {
  occurredOn: string wrap <ocaml module="Raygun_time">;
  details: details
}
